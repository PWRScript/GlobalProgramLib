name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    
jobs:
  testlinux:
    name: Build and test globalprogramlib in Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: install dependencies and globalprogramlib
      run: make install
    
    - name: test file formatting and library
      run: make test
    
    - uses: actions/upload-artifact@v2
      if: success()
      with:
        name: globalprogranlib linux - ${{ matrix.python-version }}
        path: dist
  
  testmacos:
    name: Build and test globalprogramlib in Mac OS
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: install dependencies and globalprogramlib
      run: make install
    
    - name: test file formatting and library
      run: make test
    
    - uses: actions/upload-artifact@v2
      if: success()
      with:
        name: globalprogranlib macos - ${{ matrix.python-version }}
        path: dist
        
  testwindows:
    name: Build and test globalprogramlib in Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: install dependencies
      run: pip install poetry --upgrade
    
    - name: install globalprogramlib
      run: poetry install 
    
    - name: test file formatting
      run: poetry run black --check globalprogramlib tests
      
    - name: test library
      run: poetry run pytest tests
    
    - uses: actions/upload-artifact@v2
      if: success()
      with:
        name: globalprogranlib linux - ${{ matrix.python-version }}
        path: dist
